{"version":3,"sources":["CalendarData.js","CalendarComponents.js","Calendar.js","GSX.js","Sidebar.js","App.js","index.js"],"names":["CalendarData","dateParam","Object","classCallCheck","this","monthsPerYear","daysPerMonth","dates","createDateStrings","months","createMonthString","data","today","prev","next","baseDate","setBaseDate","dateStrings","i","dateString","dateCopy","Date","setDate","getDate","dateToString","push","isToday","prevDate","date","yy","getYear","mm","getMonth","dd","concat","sundayInt","getDay","sundayDate","setHours","getFullYear","match","_dateString$split$map","split","map","num","Number","_dateString$split$map2","slicedToArray","dateParts","setDateParts","paramDate","isValidDate","apply","toConsumableArray","findPreviousSunday","firstDate","lastDate","length","firstMonth","lastMonth","firstYear","lastYear","isSameYear","CalendarHeader","props","react_default","a","createElement","className","id","onClick","window","location","hash","title","CalendarWeek","CalendarBody","e","calendarDate","target","closest","getAttribute","calendarDates","calendarItems","dateNumber","classNames","join","schedule","obj","key","mobileItem","bind","Component","Calendar","_this","possibleConstructorReturn","getPrototypeOf","call","state","setState","CalendarComponents_CalendarHeader","CalendarComponents_CalendarWeek","CalendarComponents_CalendarBody","GSX","gsxID","url","getAjax","then","filter","filteredData","feed","entry","forEach","parsedObject","substring","keyValue","slice","isFinite","parseFloat","Promise","resolve","reject","request","XMLHttpRequest","open","onload","status","response","responseText","JSON","parse","Error","statusText","onerror","send","DAYSPERWEEK","Sidebar","item","styles","day","formatDate","App","events","peru","laytcomers","guatemala","getDateHash","_this2","fetch","formatScheduleData","_this3","addEventListener","plans","sbDate","sbSchedule","src_Calendar","onDateClick","src_Sidebar","onSidebarClick","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.8ab5a9fe.chunk.js","sourcesContent":["class CalendarData {\n  monthsPerYear = [null, 'Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'July', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n  daysPerMonth  = [null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n  constructor(dateParam) {\n    let dates  = this.createDateStrings(dateParam);\n    let months = this.createMonthString(dates);\n    this.data  = { 'dates': dates, 'months': months, 'today': this.today, 'prev': this.prev, 'next': this.next }\n  }\n\n  /***** SET DATE STRINGS *****/\n\n  createDateStrings(dateParam) {\n    let baseDate = this.setBaseDate(dateParam);\n    let dateStrings = [];\n    // create dateStrings\n    for (let i = 0; i < 28; i++) {\n      const dateCopy = new Date(baseDate);\n      let dateString;\n      dateCopy.setDate(  dateCopy.getDate() + i  );\n      dateString = this.dateToString(dateCopy);\n      dateStrings.push( dateString );\n      if (this.isToday(dateCopy)) { this.today = dateString; }\n      // create 'next' date\n      if (i === 7) {\n        this.next = dateString;\n      }\n    }\n    // create 'prev' date\n    let prevDate = new Date(baseDate);\n    prevDate.setDate( prevDate.getDate() - 7 );\n    this.prev = this.dateToString(prevDate);\n    // return dateStrings\n    return dateStrings;\n  }\n\n  dateToString(date) {\n    let yy = date.getYear() + 1900;\n    let mm = date.getMonth() + 1;\n    let dd = date.getDate();\n    if (mm < 10) { mm = `0${mm}` }\n    if (dd < 10) { dd = `0${dd}` }\n    return `${yy}-${mm}-${dd}`;\n  }\n\n  findPreviousSunday(date) {\n    const sundayInt  = date.setDate( date.getDate() - date.getDay() );\n    const sundayDate = new Date(sundayInt);\n    sundayDate.setHours(0,0,0,0);\n    return sundayDate;\n  }\n\n  isToday(date) {\n    const today = new Date();\n    return (date.getDate() === today.getDate() &&\n            date.getMonth() === today.getMonth() &&\n            date.getFullYear() === today.getFullYear() );\n  }\n\n  isValidDate(yy, mm, dd) {\n    // verify that month value is valid\n    if (mm < 1 || mm > 12) { return false; }\n    // verify that date value is valid\n    if (yy % 4 === 0) { this.daysPerMonth[2] = 29; }\n    if (dd < 1 || dd > this.daysPerMonth[mm]) { return false; }\n    // if you've gotten this far, the date is correct\n    return true;\n  }\n\n  setDateParts(dateString) {\n    /* THIS METHOD WILL RETURN EITHER \"false\" OR AN ARRAY: [yy, mm, dd] */\n    // verify that string follows basic date format\n    if ( !dateString || !dateString.match(/^\\d{4}-\\d{1,2}-\\d{1,2}$/) ) { return false; }\n    // parse year, month and date vars from string argument\n    const [yy, mm, dd] = dateString.split('-').map( num => Number(num) );\n    return [yy, mm, dd];\n  }\n\n  setBaseDate(dateString) {\n    const dateParts = this.setDateParts(dateString);\n    const isValidDate = dateParts && this.isValidDate(...dateParts);\n    const paramDate = (isValidDate) ? new Date(dateParts[0], dateParts[1] - 1, dateParts[2]) : new Date();\n    return this.findPreviousSunday(paramDate);\n  }\n\n  /***** SET MONTH STRING *****/\n\n  createMonthString(dateStrings) {\n    const firstDate   = dateStrings[0].split('-'), lastDate = dateStrings[dateStrings.length - 1].split('-');\n    const firstMonth  = this.monthsPerYear[ Number(firstDate[1]) ];\n    const lastMonth   = this.monthsPerYear[ Number(lastDate[1]) ];\n    const firstYear   = firstDate[0];\n    const lastYear    = lastDate[0];\n    const isSameYear  = (firstYear === lastYear && firstMonth !== lastMonth);\n    const isSameMonth = (firstYear === lastYear && firstMonth === lastMonth);\n    if (isSameMonth) {\n      return `${firstMonth} ${lastYear}`;\n    } else  if (isSameYear) {\n      return `${firstMonth} / ${lastMonth} ${firstYear}`;\n    } else {\n      return `${firstMonth} ${firstYear} / ${lastMonth} ${lastYear}`;\n    }\n  }\n\n}\n\nexport default CalendarData;\n","import React, { Component } from 'react';\n\nconst CalendarHeader = (props) => {\n  return (\n    <header className=\"CalendarHeader\">\n      <button id=\"HeaderArrowLeft\" className=\"CalendarHeaderArrow\" onClick={ () => window.location.hash = props.prev }> &#171; </button>\n      <h1 className=\"CalendarHeading\">{props.title}</h1>\n      <button id=\"HeaderArrowRight\" className=\"CalendarHeaderArrow\" onClick={ () => window.location.hash = props.next }> &#187; </button>\n    </header>\n  );\n}\n\nconst CalendarWeek = () => {\n  return (\n    <ul className=\"CalendarWeek\">\n      <li><code>Sun<span className=\"desktop\">day</span></code></li>\n      <li><code>Mon<span className=\"desktop\">day</span></code></li>\n      <li><code>Tue<span className=\"desktop\">sday</span></code></li>\n      <li><code>Wed<span className=\"desktop\">nesday</span></code></li>\n      <li><code>Thu<span className=\"desktop\">rsday</span></code></li>\n      <li><code>Fri<span className=\"desktop\">day</span></code></li>\n      <li><code>Sat<span className=\"desktop\">urday</span></code></li>\n    </ul>\n  );\n}\n\nclass CalendarBody extends Component {\n  getDate(e) {\n    const calendarDate = e.target.closest('.first-month') || e.target.closest('.second-month');\n    this.props.onClick( calendarDate.getAttribute('id') );\n  }\n  render() {\n    const calendarDates = this.props.dates;\n    const calendarItems = [];\n    const firstMonth = Number( calendarDates[0].split('-')[1] );\n    for (let i = 0; i < 28; i++) {\n      const dateString = calendarDates[i];\n      const dateNumber = Number( dateString.split('-')[2] );\n      const dateMonth  = Number( dateString.split('-')[1] );\n      const monthClass = (firstMonth === dateMonth) ? 'first-month' : 'second-month';\n      const todayClass = (this.props.today === dateString) ? 'today' : '';\n      const classNames = ['CalendarDate', monthClass, todayClass].join(' ');\n      const schedule   = ( this.props.schedule[dateString] ) ? this.props.schedule[dateString].map( obj => <li key={obj}>{obj}</li>) : \"\";\n      const mobileItem = ( this.props.schedule[dateString] ) ? <div className=\"CalendarMobileEntry\"></div> : \"\";\n      calendarItems.push(\n        <li key={dateString} id={dateString} className={classNames} onClick={ this.getDate.bind(this)  }>\n          <div className=\"CalendarDateNumber\">{ dateNumber }</div>\n          <ul className=\"CalendarDateSchedule desktop\">{ schedule }</ul>\n          { mobileItem }\n        </li>\n      );\n    }\n    return (\n      <ul className=\"CalendarBody\">{ calendarItems }</ul>\n    );\n  }\n}\n\nexport { CalendarHeader, CalendarWeek, CalendarBody }\n","import React, { Component } from 'react';\nimport CalendarData from './CalendarData.js';\nimport { CalendarHeader, CalendarWeek, CalendarBody } from './CalendarComponents.js';\n\nclass Calendar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = new CalendarData(props.date).data;\n  }\n  componentWillUpdate(props) {\n    if (this.props.date !== props.date) {\n      const data = new CalendarData(props.date).data;\n      this.setState(data)\n    }\n  }\n  render() {\n    return (\n      <main className=\"Calendar\">\n        <CalendarHeader title={this.state.months} prev={this.state.prev} next={this.state.next} />\n        <CalendarWeek />\n        <CalendarBody dates={this.state.dates} today={this.state.today} schedule={this.props.schedule} onClick={this.props.onClick} />\n      </main>\n    );\n  }\n}\n\nexport default Calendar;\n","class GSX {\n  constructor(gsxID) {\n    this.url = `https://spreadsheets.google.com/feeds/list/${gsxID}/default/public/values?alt=json`;\n  }\n\n  fetch() {\n    return this.getAjax(this.url).then(this.filter);\n  }\n\n  filter(data) {\n    var filteredData = [];\n    data.feed.entry.forEach(function(entry){\n        var parsedObject = {};\n        for (var key in entry) {\n            if (key.substring(0,4) === \"gsx$\") {\n                const keyValue = entry[key][\"$t\"];\n                parsedObject[key.slice(4)] = keyValue && isFinite(keyValue) ? parseFloat(keyValue) : keyValue ? keyValue : null;\n            }\n        }\n        filteredData.push(parsedObject);\n    });\n    return filteredData;\n  }\n\n  getAjax(url) {\n    return new Promise(function(resolve, reject) {\n      var request = new XMLHttpRequest();\n      request.open('GET', url, true);\n      request.onload = function() {\n        if (request.status >= 200 && request.status < 400) {\n          // Success!\n          const response = request.responseText;\n          resolve(JSON.parse(response));\n        } else {\n          reject(Error(request.statusText));    // We reached our target server, but it returned an error\n        }\n      };\n      request.onerror = function() {\n        reject(Error(\"Network Error\"));     // There was a connection error of some sort\n      };\n      request.send();\n    });\n  }\n\n}\n\nexport default GSX;","import React from 'react';\n\nconst DAYSPERWEEK = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\nconst Sidebar = (props) => {\n  const schedule = (props.schedule) ? props.schedule.map( item => <li key={item}>{item}</li> ) : null;\n  const status = (props.schedule) ? 'open' : null;\n  const styles = ['Sidebar', status].join(' ');\n  const formatDate = (dateString) => {\n    if (!dateString) { return null }\n    const [yy, mm, dd] = dateString.split('-').map( obj => Number(obj) );\n    const date = new Date(yy, mm - 1, dd);\n    const day = DAYSPERWEEK[ date.getDay() ];\n    return `${day} ${mm}/${dd}`;\n  }\n  return (\n    <aside className={styles} onClick={props.onClick}>\n      <h2><code>{formatDate(props.date)}</code></h2>\n      <ul>{schedule}</ul>\n    </aside>\n  );\n}\n\nexport default Sidebar","import React, { Component } from 'react';\nimport Calendar from './Calendar';\nimport GSX from './GSX';\nimport Sidebar from './Sidebar';\n\nclass App extends Component {\n  events = {\n    'peru':       '2018-06-15',\n    'laytcomers': '2019-04-20',\n    'guatemala':  '2019-06-15'\n  }\n  constructor() {\n    super();\n    this.state = { date: this.getDateHash(), schedule: [] }\n  }\n  componentWillMount() {\n    const gsx = new GSX('1d9BnXOfxtv65dAbfbeNvVEpyqYmgMDRKkiC-o5k-T1M');\n    gsx.fetch().then( data => this.setState({ schedule: this.formatScheduleData(data) }) );\n  }\n  componentDidMount() {\n    const callback = (e) => {\n      this.setState({ date: this.getDateHash() });\n    }\n    window.addEventListener(\"hashchange\",callback);\n  }\n  formatScheduleData(data) {\n    let date = '', hash = {};\n    for (let i = 0; i < data.length; i++) {\n          const obj = data[i];\n          date = (obj.date) ? obj.date : date;\n          hash[date] = hash[date] || [];\n          hash[date].push(obj.plans);\n    }\n    return hash;\n  }\n  getDateHash() {\n    const hash = window.location.hash.substring(1);\n    return this.events[hash] || hash;\n  }\n  onDateClick(date) {\n    this.setState({ sbDate: date, sbSchedule: this.state.schedule[date] });\n  }\n  onSidebarClick() {\n    this.setState({ sbDate: null, sbSchedule: null });\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Calendar date={this.state.date} schedule={this.state.schedule} onClick={this.onDateClick.bind(this)} />\n        <Sidebar date={this.state.sbDate} schedule={this.state.sbSchedule} onClick={this.onSidebarClick.bind(this)} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}